name: Rust

on:
  workflow_dispatch:
  push:
    paths:
      - "src/**"
      - "ui/**"
      - ".github/workflows/**"
      - "Cargo.toml"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  linux_build_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --bin game
    - name: Run tests
      run: cargo test --bin game

  linux_solver_test:
    needs: linux_build_test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Run
      run: cargo run -r --bin solver

    

  windows_build_test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --bin game
    - name: Run tests
      run: cargo test --bin game

  macos_build_test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --bin game
    - name: Run tests
      run: cargo test --bin game

  android_build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1.4.2
        with:
          ndk-version: r25c
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: setup api 30
        run: sdkmanager --install "platforms;android-30"
      - name: add android target
        run: rustup target add aarch64-linux-android
      - name: install cargo apk
        run: cargo install cargo-apk
      - uses: Swatinem/rust-cache@v2
      - name: build android
        run: cargo apk build --target aarch64-linux-android --lib


  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: clippy
      run: cargo clippy --bin game
